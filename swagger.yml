openapi: 3.0.1
info:
  title: WhatsApp Web.js REST API Wrapper
  description: easy-to-use interface to interact with the WhatsApp Web platform
  version: 1.2.0
servers:
- url: http://localhost:3000
paths:
  /ping:
    get:
      tags:
      - Health
      summary: Check if server is alive
      description: Send a Ping and expect a pong back
      responses:
        200:
          description: Successful pong
          content:
            '*/*':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: pong
        500:
          description: Internal server error
          content: {}
  /localCallbackExample:
    get:
      tags:
      - Health
      summary: Locally running webhook
      description: Handle callback response locally to test functionalities
      responses:
        200:
          description: Successful
          content:
            '*/*':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        500:
          description: Internal server error
          content: {}
  /api/startSession/{sessionId}:
    get:
      tags:
      - Authentication
      summary: Start session
      description: Start a WhatsApp Web client that will trigger their own callbacks
      parameters:
      - name: sessionId
        in: path
        description: Session id for a new WhatsApp client session
        required: true
        schema:
          type: string
      responses:
        200:
          description: QR code retrieved successfully
          content:
            '*/*':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Session initiated successfully
        403:
          description: Invalid API key
          content: {}
        500:
          description: Internal server error
          content: {}
      callbacks:   # Callback definition
        QR Callback:   # Event name
          'https://example.com/webhook':   # The callback URL,
            post:
              requestBody:   # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data_type:
                          type: string
                          example: qr
                        data:
                          type: string
                          example: 2@Q6BscIpaaVmpl8ddgpI0DUSQMcP71oX0mKJegCom1Yiry4dCWZrVV8OxZ917LZcf1Zx0+bwMNw5BDw==,htHiC8fWm3TBniiPh59lRXDhSygVMTREjD1WpdHRzwM=,OJ1Zgh051s66AgjxtL8gPEHQPs4LKU9m4T0sbuh/wCs=
                        sessionId:
                          type: string
                          example: 6281288888888
              responses:
                '200':
                  description: Your server returns this code if it accepts the callback
        Status Callback:   # Event name
          'https://example.com/webhook':   # The callback URL,
            post:
              requestBody:   # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data_type:
                          type: string
                          example: status
                        data:
                          type: string
                          example: authenticated
                        sessionId:
                          type: string
                          example: 6281288888888
              responses:
                '200':
                  description: Your server returns this code if it accepts the callback
      security:
      - apiKey: []
  /api/sendMessage/{sessionId}:
    post:
      tags:
      - Actions
      summary: Send a message
      description: Endpoint for sending a message
      parameters:
      - name: sessionId
        in: path
        description: session Id
        required: true
        schema:
          type: string
      requestBody:
        description: Request body for sending a message
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                chatId:
                  type: string
                content:
                  type: object
                contentType:
                  type: string
                options:
                  type: object
            examples:
              string:
                value:
                  chatId: 6281299999999@c.us
                  content: "Hello World!"
                  contentType: "string"
                  options: {quotedMessageId: ABCD1234}
              MessageMediaFromURL:
                value:
                  chatId: 6281299999999@c.us
                  content: "https://via.placeholder.com/350x150.png"
                  contentType: "MessageMediaFromURL"
                  options: {quotedMessageId: ABCD1234}
              MessageMedia:
                value:
                  chatId: 6281299999999@c.us
                  content: {mimetype: "image/png", data: "iVBORw0KGgoAAAANSUhEUgAAAAgAAAAIAQMAAAD+wSzIAAAABlBMVEX///+/v7+jQ3Y5AAAADklEQVQI12P4AIX8EAgALgAD/aNpbtEAAAAASUVORK5CYII"}
                  contentType: "MessageMedia"
                  options: {quotedMessageId: ABCD1234}
      responses:
        200:
          description: Success
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
      callbacks:   # Callback definition
        New Message:   # Event name
          'https://example.com/webhook':   # The callback URL,
            post:
              requestBody:   # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data_type:
                          type: string
                          example: message
                        data:
                          type: object
                          example: {"ack":1,"author":"6281299999999@c.us","body":"Hello World!","from":"120363098565083901@g.us","timestamp":1681275495,"to":"6281288888888@c.us"}
                        sessionId:
                          type: string
                          example: 6281288888888
              responses:
                '200':
                  description: Your server returns this code if it accepts the callback
  /api/validateNumber/{sessionId}:
    post:
      tags:
      - Actions
      summary: Validate a WhatsApp number
      description: Find out if a number is registered on WhatsApp network
      parameters:
      - name: sessionId
        in: path
        description: Session id to use for the request
        required: true
        schema:
          type: string
      requestBody:
        required: true
        description: Request body for validating a WhatsApp number
        content:
          application/json:
            schema:
              type: object
              properties:
                targetNumber:
                  type: string
                  example: 6281299999999
      responses:
        200:
          description: Success
          content:
            '*/*':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  valid:
                    type: boolean
        403:
          description: Invalid API key
          content: {}
        404:
          description: Number validation failed
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
      - apiKey: []
  /api/getContacts/{sessionId}:
    get:
      tags:
      - Actions
      summary: Retrieve the list of contacts
      description: Get the list of WhatsApp contacts saved  with the Session
      parameters:
      - name: sessionId
        in: path
        description: Session id to use for the request
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            '*/*':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  contacts:
                    type: object
        403:
          description: Invalid API key
          content: {}
        404:
          description: Session not found
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
      - apiKey: []
  /api/terminateSession/{sessionId}:
    get:
      tags:
      - Authentication
      summary: Terminate a client session
      parameters:
      - name: sessionId
        in: path
        description: Session id of the session to terminate
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            '*/*':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        403:
          description: Invalid API key
          content: {}
        404:
          description: Client session not found
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
      - apiKey: []
  /api/terminateInactiveSessions:
    get:
      tags:
      - Authentication
      summary: Flush out all inactive sessions
      responses:
        200:
          description: Success
          content:
            '*/*':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Flush completed successfully
        403:
          description: Invalid API key
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
      - apiKey: []
  /api/terminateAllSessions:
    get:
      tags:
      - Authentication
      summary: Flush out all session (even the connected ones)
      responses:
        200:
          description: Success
          content:
            '*/*':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Flush completed successfully
        403:
          description: Invalid API key
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
      - apiKey: []
components:
  securitySchemes:
    apiKey:
      type: apiKey
      name: x-api-key
      in: header